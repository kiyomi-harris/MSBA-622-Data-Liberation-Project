>>>malloy
source: citations is duckdb.table("./inspections-citations.csv") extend {
    primary_key: `hash_id`
    dimension: NCI_type is coalesce(kind, 'Neither')
    dimension: code_description is upper(replace(`desc`,".",""))

}

source: narratives is duckdb.sql("""
  SELECT * FROM read_csv_auto('./inspections-narratives.csv', auto_detect=true, ignore_errors=true, null_padding=true)
""") extend {
    primary_key: `hash_id`
dimension: e1 is regexp_replace!(narrative, '(End Section|n)$', '')

dimension: cleaned_narrative is regexp_replace!(trim(regexp_replace!(e1, '[\\s\\n\\r]+', ' ')), '[\\s]+$', '')  

}

source: species is duckdb.table("./inspections-species.csv") extend {
    primary_key: `hash_id`
    rename: animal_count is `count`
    measure: species_sum is sum(animal_count)
    measure: unique_animals is count(animal_count)
}
source: inspections is duckdb.table("./inspections.csv") extend {
    join_one: citations with  `hash_id`
    join_one: narratives with  `hash_id`
    join_one: species with  `hash_id`
    dimension: report_date is strptime!date(`pdf_report_date`, '%-d-%b-%Y')
    dimension: pdf_dates is strptime!date(`pdf_date`, '%-d-%b-%Y')
    dimension: legalname is upper(web_legalName)
    dimension: city is upper(web_city)
   
    measure: 
        total_sum_critical is sum(web_critical) 
        total_sum_noncritical is sum(web_nonCritical) 
        total_sum_direct is sum(web_direct) 
        total_sum_teachable is sum(web_teachableMoments)
        total_count is count()
        total_noncompliant_items is total_sum_critical + total_sum_direct + total_sum_noncritical + total_sum_teachable


}
>>>markdown
APHIS Data -> Animal and Plant Health Inspection Services 
>>>markdown
## Inspection Data
In this file, each row represents one inspection report with data extracted from both the APHIS web portal and the public inspection report pdfs. There are also columns related to the docclouds that are links related to how the pdfs were uploaded. The data includes the institution where the report happened, different dates relating to report and inspections. How many of each animal variety, how many critical, teachable, direct, or noncritical noncomplient items there are. There is also a lot of data pertaining to customer identification.
>>>malloy
run: inspections -> {
    select: *
}
>>>markdown
## Citation Data
This data includes the code citation, the code description, whether the citation is a repeat finding, whether the finding was 'direct', 'critical', or 'neither'. And finally, a narrative of the citation.
>>>malloy
run: citations -> {
    select: *
}
>>>markdown
## Narrative Data
The Narrative Data just has the connecting hash_id and the full length description of what was reported during the inspection.
>>>malloy
run: narratives -> {
    select: *
}
>>>markdown
## Species Data
The Species Data has the connecting hash_id, the scientific and common name of the animals and how many animals of that species were inspected.
>>>malloy
run: species -> {
    select: *
}
>>>markdown
## Total amount of reports
Count of every report.
>>>malloy
run: inspections -> {
    aggregate: total_count
}
>>>markdown
## The amount of reports every year since 2014  

There are a few outliers with inconsistent reports prior to 2014. The APHIS started to fully document everything beginning in 2014.
>>>malloy
# bar_chart
run: inspections -> {
    group_by: report_date.year 
    where: report_date > @2013
    aggregate: total_count
    
}
>>>markdown
## Repeat Inspections
Shows whether the inspection was a repeat or not.
>>>malloy
run: inspections -> {
    group_by: citations.repeat
    aggregate: total_count
}
>>>markdown
## Inspection Type
Shows the total types of inspections conducted.
>>>malloy
run: inspections -> {
    group_by: pdf_insp_type
    aggregate: total_count
}
>>>markdown
## Inspection Type by State
Shows the types of inspections by state.
>>>malloy
run: inspections -> {
    group_by: web_state

    nest: by_state is {
        group_by: pdf_insp_type
        aggregate: total_count
    }
}
>>>markdown
## Insepction Type by State per Year
Shows the yearly inspection type by state.
>>>malloy
run: inspections -> {
  where: report_date > @2013
  group_by: report_date.year
  
  nest: by_year is {
    group_by: web_state
    aggregate: total_count
    limit:3
  

  nest: by_state is {
    group_by: pdf_insp_type
    aggregate: total_count
    
    limit: 3
  }
  }
}
>>>markdown
## Liscense Types
Shows the types of liscences and how many there are. 
>>>malloy
run: inspections -> {
    group_by: licenseType
    aggregate: total_count
}
>>>markdown
## Most Common Narratives in Reports
This shows the most common narratives within the report.
>>>malloy
run: inspections -> {
    aggregate: all_count is count()
    nest: Kinds_of_Narratives is {
    group_by: narratives.cleaned_narrative
    aggregate: total_count
    }
}
>>>markdown
## Citation Code Violation
Most common code violations
>>>malloy
run: inspections -> {
    group_by: citations.code
    aggregate: total_count
}
>>>markdown
## Citation Code Descritption
Shows the description of the types of code violations
>>>malloy
run: citations -> {
    group_by: code_description
    group_by: code
    aggregate: total_count is count()
}
>>>markdown
## Citation Code Violation per Year
Shows the top code description violations per year.
>>>malloy
run: inspections -> {
    where: report_date > @2013
  group_by: report_date.year
  nest: by_year is {
    group_by: citations.code_description
    aggregate: total_count
    limit: 5
    where: citations.code_description is not null
  }
}
>>>markdown
## Total Noncompliant Items
Shows in total all non-compliant items.
>>>malloy
run: inspections -> {
    aggregate: total_noncompliant_items
}
>>>markdown
## Total Noncompliant Item by Kind
Shows the different types of non compliant items in total.
>>>malloy
run: inspections -> {
    aggregate: total_sum_critical
    aggregate: total_sum_direct
    aggregate: total_sum_noncritical
    aggregate: total_sum_teachable
}
>>>markdown
## Noncompliant Items Per Year
Shows the types of noncompliant items found each year. 
>>>malloy
run: inspections -> {
  where: report_date > @2013
  group_by: report_date.year

  aggregate: total_noncompliant_items 

  nest: type_by_year is {
    aggregate: total_sum_critical 
    aggregate: total_sum_direct
    aggregate: total_sum_noncritical 
    aggregate: total_sum_teachable 
  }
}

>>>markdown
## Number of Inspections by State
Shows the total number of inspections by state.
>>>malloy
run: inspections -> {
    group_by: web_state
    aggregate: total_count
}
>>>markdown
## Number of Inspections by State Per Year
Shows the yearly inspection count by state.
>>>malloy
run: inspections -> {
     where: report_date > @2013
  group_by: report_date.year

nest: by_year is {
    group_by: web_state
    aggregate: total_count
    limit: 5
}
    
}
>>>markdown
## Noncompliant Items by State
Shows the states with the most noncompliant items.
>>>malloy
run: inspections -> {
    group_by: web_state
    aggregate: total_noncompliant_items
    }
>>>markdown
## Noncompliant Items by State Per Year
This shows for each year the top 3 states with noncompliant items during inspections.
>>>malloy
run: inspections -> {
  where: report_date > @2013
  group_by: report_date.year
  
  # shape_map
  nest: by_state is {
    group_by: web_state
    aggregate: total_noncompliant_items
  }

  nest: top_states is {
    group_by: web_state
    aggregate: total_noncompliant_items
    
    limit: 3
  }
}
>>>markdown
## States total Noncompliant Items
Shows each states total types of noncompliant items.
>>>malloy
run: inspections -> {
  group_by: web_state
  aggregate: total_noncompliant_items 

  nest: type_per_state is {
    aggregate: total_sum_critical 
    aggregate: total_sum_direct
    aggregate: total_sum_noncritical 
    aggregate: total_sum_teachable 
  }
}
>>>markdown
## Inspection Type by State Per Year
Shows the top 5 states in each year with the amount of each type of noncompliant items.
>>>malloy
run: inspections -> {
  where: report_date > @2013
  group_by: report_date.year

  nest: by_year is {
    group_by: web_state
  aggregate: total_noncompliant_items 
  limit: 5


  nest: type_by_year is {
    aggregate: total_sum_critical 
    aggregate: total_sum_direct
    aggregate: total_sum_noncritical 
    aggregate: total_sum_teachable 
  }
  }
}
>>>markdown
## Unique Institutions
This shows the number of unique fields within the legalname column, which represents the institution that was inspected.
>>>malloy
run: inspections -> {
    aggregate: unique_institutions is count(legalname)
   
}
>>>markdown
## List of Inspected Entities
Here are all of the insitutions that have been inspected.
>>>malloy
run: inspections -> {
    group_by: legalname
    limit: 14000
}
>>>markdown
## Inspections per Institution
Shows total amounts of inspections
>>>malloy
run: inspections -> {
    group_by: legalname
    aggregate: total_count
}
>>>markdown
## Inspections per Institution per Year
Shows the top 5 institutions by year.
>>>malloy
run: inspections -> {
      where: report_date > @2013
      group_by: report_date.year
      nest: by_institution is {
      group_by: legalname
      aggregate: total_count
      limit: 5
      }

}
>>>markdown
 ## Non-compliant Items per Institution
 Shows the type of Non-compliant Items per Institution
>>>malloy
run: inspections -> {
    group_by: legalname
    aggregate: total_noncompliant_items
}
>>>markdown
## Non-compliant Items per Institution per Year
Shows the types of non-compliant items per institution per year
>>>malloy
run: inspections -> {
     where: report_date > @2013
  group_by: report_date.year

nest: by_year is {
    group_by: legalname
    aggregate: total_noncompliant_items
    limit: 5
}
    
}
>>>markdown
## Breakdown of Noncompliant Items by Year and Entity
This shows the different kinds of noncompliant items per institution and by year.
>>>malloy
run: inspections -> {
     where: report_date > @2013
  group_by: report_date.year

nest: by_year is {
    group_by: legalname
    aggregate: total_noncompliant_items
    limit: 5
nest: type_by_institution is {
    aggregate: total_sum_critical
    aggregate: total_sum_direct
    aggregate: total_sum_noncritical
    aggregate: total_sum_teachable 
}
}
    
}
>>>markdown
## Unique Animals
This shows how many unique animals have been inspected in total.
>>>malloy
run: inspections -> {
    aggregate: species.unique_animals
}
>>>markdown
## Total Species
This shows how many of each species have been inspected.
>>>malloy
run: inspections -> {
    group_by: species.common
    aggregate: species.species_sum
}
>>>markdown
## Total Species over the Years
This shows the top 5 most reported species by total animal per year.
>>>malloy
run: inspections -> {
    where: report_date > @2013
    group_by: report_date.year
    
    nest: by_year is {
    group_by: species.common
    limit: 5
    aggregate: species.species_sum}
}
>>>markdown
## Most Common Animal to Inspect
This shows how many of each type of animal gets inspected per year.
>>>malloy
run: inspections -> {
    where: report_date > @2013
    group_by: report_date.year
    nest: by_year is {
    group_by: species.common
    aggregate: total_count 
    where: species.common is not null
    limit: 6}
}
>>>markdown
## Most Common Animal by State
This shows the most common animals per state.
>>>malloy
run: inspections -> {
    group_by: web_state
    nest: by_state is {
        group_by: species.common
        aggregate: species.species_sum
        limit: 5
    }

}
>>>markdown
## Most Common Animal by State per Year
This shows the yearly top animals by state.
>>>malloy
run: inspections -> {
    where: report_date > @2013
    group_by: report_date.year

     # shape_map
  nest: by_year is {
    group_by: web_state
    aggregate: species.species_sum
  }
    nest: top_state is {
        group_by: web_state
        aggregate: species.species_sum
        limit: 1
    nest: top_species is {
        group_by: species.common
        aggregate: species.species_sum
        where: species.common is not null
        limit: 5
    }
}
}
>>>markdown
## Washington State's Total Inspections
>>>malloy
run: inspections -> {
    where: web_state = "Washington"
    group_by: web_state
    aggregate: total_count
}
>>>markdown
## Unique Sites in Washington
Shows the amount of unique inspection sites within Washington.
>>>malloy
run: inspections -> {

    where: web_state = "Washington"
    group_by: web_state
    aggregate: unique_sites is count(legalname)
}
>>>markdown
## Washington Unique Animals
Shows the number of unique animals in Washington.
>>>malloy
run: inspections -> {
     where: web_state = "Washington"
    group_by: web_state
    aggregate: species.unique_animals
}
>>>markdown
## Total Animals Inspected per Year in Washington
Shows the total amount of the top inspected animals per year.
>>>malloy
run: inspections -> {
    where: report_date > @2013
    group_by: report_date.year
    where: web_state = "Washington"

  nest: by_year is {
    group_by: web_state
    aggregate: species.species_sum
  }
    
    nest: top_species is {
        group_by: species.common
        aggregate: species.species_sum
        where: species.common is not null
        limit: 5
    }
}
